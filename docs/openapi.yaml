openapi: 3.0.3
info:
  title: TON Society API
  description: Public API specification
  version: 1.0.0
servers:
  - url: https://society.ton.org/v1
tags:
  - name: Infra
    description: Infastructure endpoints
  - name: Users
    description: Handle users related data
  - name: Collections
    description: Handle data related to the collections of SBTs stroed in the internal database
  - name: Compressed SBTs
    description: Explore data related to the compressed SBT implementation
paths:
  /status:
    get:
      tags:
        - Infra
      summary: API status
      description: API status healthcheck
      responses:
        '200':
          description: Successful operation
        '500':
          description: Internal server error
  /users:
    get:
      tags:
        - Users
      summary: Finds all users
      description: Returns a list of top users in the order of the number of awards received by each user, `is_name_changed` field, `is_telegram_verified` field, the date awards has been received, and, finally, user Id. Only publicly available data is exposed.
      operationId: findUsers
      parameters:
        - name: _start
          in: query
          description: Paginated list start index
          required: true
          explode: true
          schema:
            type: number
            default: 0
        - name: _end
          in: query
          description: Paginated list end index
          required: true
          explode: true
          schema:
            type: number
            default: 10
        - name: collection_id
          in: query
          description: Filters users who own an SBT in the given collection. Collection ids are usually provided in the `api::activity` Strapi entity.
          required: false
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessPublicUsers'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found
        '500':
          description: Internal server error
  /users/{username}:
    get:
      tags:
        - Users
      summary: Finds a user by username
      description: Simply returns publicly available user data
      operationId: findUserByUsername
      parameters:
        - name: username
          in: path
          description: User's username
          required: true
          explode: true
          schema:
            type: string
            default: 41d888dc37
        - name: collection_id
          in: query
          description: Returns user data only if this user owns an SBT in the collection with the provided id.
          required: false
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessPublicUser'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found
        '500':
          description: Internal server error
  /users/{username}/sbts:
    get:
      tags:
        - Users
      summary: Finds SBTs owned by a user
      description: Returns a paginated list of SBTs owned by a user given user's username
      operationId: findUserNftsByUsername
      parameters:
        - name: username
          in: path
          description: User's username
          required: true
          explode: true
          schema:
            type: string
            default: 41d888dc37
        - name: _start
          in: query
          description: Paginated list start index
          required: true
          explode: true
          schema:
            type: number
            default: 0
        - name: _end
          in: query
          description: Paginated list end index
          required: true
          explode: true
          schema:
            type: number
            default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessSbts'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found
        '500':
          description: Internal server error
  /collections/{path}:
    get:
      tags:
        - Collections
      summary: Finds an SBT collection
      description: Returns an SBT collection data given its id or friendly address
      operationId: findCollectionById
      parameters:
        - name: path
          in: path
          description: SBT collection id or friendly address
          required: true
          explode: true
          schema:
            type: string
            example: EQDRPEXimR0wcHxijP0ep_p-UCqmEZkkZ6_5KZEgp_cXA3Tn
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessCollection'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found
        '500':
          description: Internal server error
  /collections/{path}/participants:
    get:
      tags:
        - Collections
      summary: Finds activity participants
      description: Returns a list of users (in a random order) participated in the activity related to the SBT collection with the given id or friendly address
      operationId: findCollectionParticipantsById
      parameters:
        - name: path
          in: path
          description: SBT collection id or friendly address
          required: true
          explode: true
          schema:
            type: string
            example: EQDRPEXimR0wcHxijP0ep_p-UCqmEZkkZ6_5KZEgp_cXA3Tn
        - name: limit
          in: query
          description: The maximum number of participants to return
          required: true
          explode: true
          schema:
            type: number
            default: 3
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessCollectionParticipants'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found
        '500':
          description: Internal server error
  /hubs:
    get:
      tags:
        - Activities
      summary: Finds all Hubs
      description: An endpoint that compounds data from Users model, Sbt Tokens model, and Strapi Activties. Last activities are most recent rewards (or SBTs) received by users.
      operationId: findHubs
      parameters:
        - name: _start
          in: query
          description: Paginated list start index
          required: true
          explode: true
          schema:
            type: number
            default: 0
        - name: _end
          in: query
          description: Paginated list end index
          required: true
          explode: true
          schema:
            type: number
            default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessHubs'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found
        '500':
          description: Internal server error

  /activities:
    post:
      tags:
        - Activities
      summary: Creates a new activity
      description: An endpoint that allows to create a new activity. See [ton-society events catalouge](https://society.ton.org/activities/active). Newly created activity is posted on the website and is available by its slug (use GET /activities/{activity_id} request to find the activity slug) but might not be present in the catalouge. In order to appear under one of the activity categories, the activity needs to go through additional moderation. 
      operationId: createEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title, subtitle, description, hub_id]
              properties:
                title:
                  type: string
                  description: The activity title
                  example: 'Open League Summer: Taipei Bootcamp'
                subtitle:
                  type: string
                  description: The activity subtitle
                  example: '$2,000,000 in prizes and 13 IRL Bootcamps!'
                description:
                  type: string
                  description: The activity description
                  example: "**Meet Open League Summer Bootcamp in Taipei!**\nPITCH. BUILD. GROW. WIN.\n**$2,000,000** in prizes and 13 IRL Bootcamp events â€” this is The Open League Summer ðŸ”¥\nItâ€™s going to be hot and exciting!"
                hub_id:
                  type: integer
                  description: Id of the corresponding ton-society hub of the activity (e.g., CIS, Global, etc.). Use [/hubs](https://society.ton.org/v1/hubs?_start=0&_end=3) endpoint to retrieve the list of hubs.
                  example: 1
                additional_info:
                  type: string
                  description: The activity additional information
                  example: 'Taipei, Taiwan'
                start_date:
                  type: string
                  description: The start date of the activity in the appropriate format
                  example: '2024-12-16'
                end_date:
                  type: string
                  description: The end date of the activity in the appropriate format
                  example: '2025-12-31'
                cta_button:
                  type: object
                  required: [label, link]
                  properties:
                    label:
                      type: string
                      description: Label shown on the CTA button
                      example: 'Event details'
                    link:
                      type: string
                      description: External link opened when the CTA button is clicked
                      example: https://lu.ma/3mx6a7l7
                rewards:
                  type: object
                  required: [mint_type]
                  oneOf:
                    - $ref: '#/components/schemas/RewardsManualMint'
                    - $ref: '#/components/schemas/RewardsExistingCollection'
                    - $ref: '#/components/schemas/RewardsHubBased'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessEventCreation'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found
        '429':
          description: Rate limit exceeded. See "Retry-After", "X-RateLimit-Limit", "X-RateLimit-Remaining", and "X-RateLimit-Reset" headers in the response
        '500':
          description: Internal server error
      security:
        - api_key: []
        - partner_id: []

  /activities/{activity_id}:
    get:
      tags:
        - Activities
      summary: Finds an activity
      description: Featch activity data including the address of the corresponding compressed collection (if already minted). The address corresponding to the given activity is under the "Rewards" field, i.e., `data.rewards.collection_address`. If `collection_address` is missing, no collection has been minted yet. For details, see `strapi.ActivityAttributes` specifications. If `publishedAt` field is not present, the activity hasn't been published yet.
      operationId: findActivity
      parameters:
        - name: activity_id
          in: path
          description: Id of the activity to be fetched
          required: true
          explode: true
          schema:
            type: number
            default: 106
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessGetActivityResponseDTO'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found
        '429':
          description: Rate limit exceeded. See "Retry-After", "X-RateLimit-Limit", "X-RateLimit-Remaining", and "X-RateLimit-Reset" headers in the response
        '500':
          description: Internal server error
      security:
        - api_key: []
        - partner_id: []
    patch:
      tags:
        - Activities
      summary: Updates an activity
      description: An endpoint that allows to update an activity of the "Events" activity group. See [ton-society events page](https://society.ton.org/activities/events).
      operationId: updateEvent
      parameters:
        - name: activity_id
          in: path
          description: Id of the activity to be patched
          required: true
          explode: true
          schema:
            type: number
            default: 1101
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The activity title
                  example: "Open League Summer: Taipei Bootcamp"
                subtitle:
                  type: string
                  description: The activity subtitle
                  example: "$2,000,000 in prizes and 13 IRL Bootcamps!"
                description:
                  type: string
                  description: The activity description
                  example: "**Meet Open League Summer Bootcamp in Taipei!**\nPITCH. BUILD. GROW. WIN.\n**$2,000,000** in prizes and 13 IRL Bootcamp events â€” this is The Open League Summer ðŸ”¥\nItâ€™s going to be hot and exciting!"
                hub_id:
                  type: integer
                  description: Id of the corresponding ton-society hub of the activity (e.g., CIS, Global, etc.). Use [/hubs](https://society.ton.org/v1/hubs?_start=0&_end=3) endpoint to retrieve the list of hubs.
                  example: 1
                additional_info:
                  type: string
                  description: The activity additional information
                  example: "Taipei, Taiwan"
                start_date:
                  type: string
                  description: The start date of the activity in the appropriate format. To nullify pass "null"
                  example: "2024-12-16"
                end_date:
                  type: string
                  description: The end date of the activity in the appropriate format. To nullify pass "null"
                  example: "2025-12-31"
                cta_button:
                  type: object
                  properties:
                    label:
                      type: string
                      description: Label shown on the CTA button
                      example: "Event details"
                    link:
                      type: string
                      description: External link opened when the CTA button is clicked
                      example: https://lu.ma/3mx6a7l7
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccess'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found
        '429':
          description: Rate limit exceeded. See "Retry-After", "X-RateLimit-Limit", "X-RateLimit-Remaining", and "X-RateLimit-Reset" headers in the response
        '500':
          description: Internal server error
      security:
        - api_key: []
        - partner_id: []
    delete:
      tags:
        - Activities
      summary: Deletes an activity
      description: An endpoint that allows to delete an activity only if a corresponding compressed collection has not been minted yet
      operationId: deleteEvent
      parameters:
        - name: activity_id
          in: path
          description: Id of the activity to be deleted
          required: true
          explode: true
          schema:
            type: number
            default: 1101
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccess'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found
        '429':
          description: Rate limit exceeded. See "Retry-After", "X-RateLimit-Limit", "X-RateLimit-Remaining", and "X-RateLimit-Reset" headers in the response
        '500':
          description: Internal server error
      security:
        - api_key: []
        - partner_id: []

  /activities/{activity_id}/metadata:
    put:
      tags:
        - Activities
      summary: Replace the metadata for the collection corresponding to the given activity id
      description: "Replace (i.e., puts) metadata of a minted compressed collection with a new one passed in the body param. The me can only be update for collection bined to an activity. Note: 1) this endpoint does not update items metadata even if it's the same as in collection 2) changes may take a while since the collection data might be cached."
      operationId: putCollectionMetadata
      parameters:
        - name: activity_id
          in: path
          description: Id of the activity
          required: true
          explode: true
          schema:
            type: number
            default: 1101
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionMetadata'
      security:
        - api_key: []
        - partner_id: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessRewardLink'
        '400':
          description: Invalid query/path param provided
        '401':
          description: Erroneous pair of API key and Partner Id provided
        '404':
          description: Resource not found
        '429':
          description: Rate limit exceeded. See "Retry-After", "X-RateLimit-Limit", "X-RateLimit-Remaining", and "X-RateLimit-Reset" headers in the response
        '500':
          description: Internal server error

  /activities/{activity_id}/metadata/{friendly_owner_address}:
    put:
      tags:
        - Activities
      summary: Replace the item metadata for the given item owner
      description: "Replace (i.e., put) metadata for the item that was rewarded to a user with a given participant id (wallet address or telegram user id). Note: this endpoint doesn't clean SBT token metadata cache in leaderboards or paginated lists. However, as soon as the cache expires, requested changes in the metadata should be available."
      operationId: putItemMetadata
      parameters:
        - name: activity_id
          in: path
          description: Id of the activity
          required: true
          explode: true
          schema:
            type: number
            default: 1101
        - name: friendly_owner_address
          in: path
          description: Claimie wallet address in the friendly format
          required: true
          schema:
            type: string
            default: UQD0NThTbnfyouCHC9bLmtCD6vuMwKZ75EzVs2u0DELBFSzS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemMetadataJson'
      security:
        - api_key: []
        - partner_id: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessRewardLink'
        '400':
          description: Invalid query/path param provided
        '401':
          description: Erroneous pair of API key and Partner Id provided
        '404':
          description: Resource not found
        '429':
          description: Rate limit exceeded. See "Retry-After", "X-RateLimit-Limit", "X-RateLimit-Remaining", and "X-RateLimit-Reset" headers in the response
        '500':
          description: Internal server error

  /activities/{activity_id}/rewards/{participant_id}:
    get:
      tags:
        - Activities
      summary: Fetch a unique reward link
      description: Returns a unique reward link using participant's wallet friendly address or Telegram user id. Activity participants can [connect a wallet](https://docs.ton.org/develop/dapps/ton-connect/overview) before they start participating in the activity. In case of Telegram Mini App, simply use [window.Telegram.WebApp.initData.user.id](https://www.tapps.center/docs/packages/tma-js-init-data/user).
      operationId: findRewardLink
      parameters:
        - name: activity_id
          in: path
          description: Id of the activity, for wich the participant was rewarded
          required: true
          explode: true
          schema:
            type: number
            default: 14
        - name: participant_id
          in: path
          description: Unique identifier of the activity participant, either wallet address (friendly format) or Telegram user Id
          required: true
          explode: true
          schema:
            type: string
            default: 1144289
      security:
        - api_key: []
        - partner_id: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessRewardLink'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found
        '429':
          description: Rate limit exceeded. See "Retry-After", "X-RateLimit-Limit", "X-RateLimit-Remaining", and "X-RateLimit-Reset" headers in the response
        '500':
          description: Internal server error

  /activities/{path}/rewards/{participant_id}/status:
    get:
      tags:
        - Activities
      summary: Fetch status of a unique reward link
      description: Returns status of a unique reward link using participant's wallet friendly address or Telegram user id. Activity participants can [connect a wallet](https://docs.ton.org/develop/dapps/ton-connect/overview) before they start participating in the activity. In case of Telegram Mini App, simply use [window.Telegram.WebApp.initData.user.id](https://www.tapps.center/docs/packages/tma-js-init-data/user).
      operationId: getParticipantRewardStatus
      parameters:
        - name: path
          in: path
          description: Activity's internal id or friendly collection address (minted for the given activity)
          required: true
          explode: true
          schema:
            type: string
            default: EQD264kOuQVWEbcgE7yo46_wiXmD55-9G7Wa_x46sDxlGRoq
        - name: participant_id
          in: path
          description: Unique identifier of the activity participant, either wallet address (friendly format) or Telegram user Id
          required: true
          explode: true
          schema:
            type: string
            default: 733289
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessRewardLinkStatus'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found. There is no such combination of the activity id and participant data
        '429':
          description: Rate limit exceeded. See "Retry-After", "X-RateLimit-Limit", "X-RateLimit-Remaining", and "X-RateLimit-Reset" headers in the response
        '500':
          description: Internal server error

  /activity-groups/{activity_group_slug}/activities/addresses:
    get:
      tags:
        - Activities
      summary: Finds a paginated list of activities (represented by its slug) and corresponding collection addresses
      operationId: getActivityCollectionAddresses
      parameters:
        - name: activity_group_slug
          in: path
          description: Slug of the activity group category. See the list of activity categories [on the website](https://society.ton.org).
          required: true
          explode: true
          schema:
            type: string
            default: build
        - name: _start
          in: query
          description: Paginated list start index
          required: true
          explode: true
          schema:
            type: number
            default: 0
        - name: _end
          in: query
          description: Paginated list end index
          required: true
          explode: true
          schema:
            type: number
            default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActivityCollectionAddressesDTO'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found. There is no such combination of the activity id and participant data
        '500':
          description: Internal server error

  /csbts/collections/{address}/v1/items/{index}:
    get:
      tags:
        - Compressed SBTs
      summary: Fetch item data and the proor cell
      description: The endpoint follows specifications outlined in the ["Compressed NFT Standard"](https://github.com/krigga/TEPs/blob/compressed-nfts/text/0000-compressed-nft-standard.md#1-itemsindex)
      operationId: findCsmtItem
      parameters:
        - name: address
          in: path
          description: SBT collection friendly address
          required: true
          explode: true
          schema:
            type: string
            default: EQAyaHk64ZntohYtixic2oOt2jyRV_GpJ0Qn-yl4Kh9vJz_i
        - name: index
          in: path
          description: Index of the requested item
          required: true
          explode: true
          schema:
            type: number
            default: 602
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsbtItemByIndex'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found
        '500':
          description: Internal server error

  /csbts/collections/{address}/v1/items:
    get:
      tags:
        - Compressed SBTs
      summary: Fetch list of items in the slice given its offset and count
      description: The endpoint follows specifications outlined in the ["Compressed NFT Standard"](https://github.com/krigga/TEPs/blob/compressed-nfts/text/0000-compressed-nft-standard.md#2-itemsoffsetoffsetcountcount)
      operationId: findCsbtItems
      parameters:
        - name: address
          in: path
          description: SBT collection friendly address
          required: true
          explode: true
          schema:
            type: string
            default: EQAyaHk64ZntohYtixic2oOt2jyRV_GpJ0Qn-yl4Kh9vJz_i
        - name: offset
          in: query
          description: Starting index of the returned slice of items
          required: true
          explode: true
          schema:
            type: number
            default: 11
        - name: count
          in: query
          description: Number of items to return
          required: true
          explode: true
          schema:
            type: number
            default: 26
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsbtItems'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found
        '500':
          description: Internal server error

  /csbts/collections/{address}/v1/state:
    get:
      tags:
        - Compressed SBTs
      summary: Fetch the state of a compressed SBT collection
      description: The endpoint follows specifications outlined in the ["Compressed NFT Standard"](https://github.com/krigga/TEPs/blob/compressed-nfts/text/0000-compressed-nft-standard.md#3-state)
      operationId: findCsbtCollectionState
      parameters:
        - name: address
          in: path
          description: SBT collection friendly address
          required: true
          explode: true
          schema:
            type: string
            default: EQD264kOuQVWEbcgE7yo46_wiXmD55-9G7Wa_x46sDxlGRoq
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsbtCollectionState'
        '400':
          description: Invalid query/path/body param provided
        '404':
          description: Resource not found
        '500':
          description: Internal server error

  /activities/{activity_id}/allowlist/telegram-ids:
    post:
      tags:
        - Allowlists
      summary: Add telegram ids to allowlist
      description: Upload a single column csv containing telegram ids to be added to the activity reward allowlist. Note that activity should be published. Endpoint returns a reward link url to be distrubuted to the activity participants, only participants from allowlist can claim the reward. In case of existing pair of `activity_id` and `telegram_id` (from the .csv), an error is thrown. The file limit is 21 MB. Maximum number of rows is 350000.
      operationId: creatTelegramUserIdAllowlistEntries
      parameters:
        - name: activity_id
          in: path
          description: Activity id
          required: true
          explode: true
          schema:
            type: number
            default: 129
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              default: 129
              properties:
                file:
                  type: string
                  format: binary
                  description: CSV file containing the Telegram IDs
      security:
        - api_key: []
        - partner_id: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessRewardLink'
        '400':
          description: Invalid query/path/body param provided
        '401':
          description: Erroneous pair of API key and Partner Id provided
        '403':
          description: Not enough permissions to access the requested resource
        '404':
          description: Resource not found
        '500':
          description: Internal server error

  /activities/{activity_id}/allowlist/telegram-ids/{telegram_id}:
    post:
      tags:
        - Allowlists
      summary: Add a single telegram id to allowlist
      description: Create a telegram id entry to be added to the activity reward allowlist. Note that activity should be published. Endpoint returns a reward link url to be distrubuted to the activity participants, only participants from allowlist can claim the reward.
      operationId: createTelegramUserIdAllowlistEntry
      parameters:
        - name: activity_id
          in: path
          description: Activity id
          required: true
          explode: true
          schema:
            type: integer
            default: 1229
        - name: telegram_id
          in: path
          description: Claimie telegram user id
          required: true
          schema:
            type: integer
            default: 6685490986
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemMetadataJson'
      security:
        - api_key: []
        - partner_id: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessRewardLink'
        '400':
          description: Invalid query/path param provided
        '401':
          description: Erroneous pair of API key and Partner Id provided
        '500':
          description: Internal server error

  /activities/{activity_id}/allowlist/wallets:
    post:
      tags:
        - Allowlists
      summary: Add wallet addresses to allowlist
      description: Upload a single column csv containing friendly wallet addresses to be added to the activity reward allowlist. Note that activity should be published. Endpoint returns a reward link url to be distrubuted to the activity participants, only participants from allowlist can claim the reward. In case of existing pair of `activity_id` and `friendly_owner_address` (from the .csv), an error is thrown. The file limit is 21 MB. Maximum number of rows is 350000.
      operationId: createWalletAllowlistEntries
      parameters:
        - name: activity_id
          in: path
          description: Activity id
          required: true
          explode: true
          schema:
            type: number
            default: 129
      requestBody:
          required: true
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary
                    description: CSV file containing the friendly wallet addresses
      security:
        - api_key: []
        - partner_id: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessRewardLink'
        '400':
          description: Invalid query/path/body param provided
        '401':
          description: Erroneous pair of API key and Partner Id provided
        '403':
          description: Not enough permissions to access the requested resource
        '404':
          description: Resource not found
        '500':
          description: Internal server error

  /activities/{activity_id}/allowlist/wallets/{friendly_owner_address}:
    post:
      tags:
        - Allowlists
      summary: Add a single wallet address to allowlist
      description: Create a wallet address entry to be added to the activity reward allowlist. Note that activity should be published. Endpoint returns a reward link url to be distrubuted to the activity particiapnts, only particiapnts from allowlist can claim the reward.
      operationId: createWalletAllowlistEntry
      parameters:
        - name: activity_id
          in: path
          description: Activity id
          required: true
          explode: true
          schema:
            type: number
            default: 1229
        - name: friendly_owner_address
          in: path
          description: Claimie wallet address in the friendly format
          required: true
          schema:
            type: string
            default: UQD0NThTbnfyouCHC9bLmtCD6vuMwKZ75EzVs2u0DELBFSzS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemMetadataJson'
      security:
        - api_key: []
        - partner_id: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessRewardLink'
        '400':
          description: Invalid query/path param provided
        '401':
          description: Erroneous pair of API key and Partner Id provided
        '500':
          description: Internal server error

components:
  schemas:
    PublicUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Priscilla Miller
        username:
          type: string
          example: 238497403a24c
        bio:
          type: string
          example: 23 y.o. designer from San-Francisco
        awards_count:
          type: integer
          example: 166
        last_award_at:
          type: integer
          example: 1711013388
        created_at:
          type: integer
          example: 1711013388
        updated_at:
          type: integer
          example: 1711013388
        avatar_url:
          type: string
          format: url
          example: https://storage.googleapis.com/ton-strapi/Avatar_1321317640_92f4adfc3f/Avatar_1321317640_92f4adfc3f.png
    SuccessPublicUser:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/PublicUser'
    SuccessPublicUsers:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            count:
              type: integer
              format: int64
              example: 324
            users:
              type: array
              items:
                $ref: '#/components/schemas/PublicUser'
    Sbt:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        sbt_collections_id:
          type: integer
          format: int64
          example: 21
        content_uri:
          type: string
        name:
          type: string
          example: TON Bounty #305
        description:
          type: string
          example: Reward for valuable TON Ecosystem contributions
        image:
          type: string
          example: https://storage.googleapis.com/tonsociety/596c2c53-deb2-4afd-9318-3d01238ce7c0.png
        content_json:
          type: object
        created_at:
          type: integer
          format: int64
          example: 1711095609
        updated_at:
          type: integer
          format: int64
          example: 1711095609
        sbt_collection_address:
          type: string
          example: EQBAJCGblueX9Nwr84TmrcLmIoPbeunnujBoziT3MtJuaJ0J
    SuccessSbts:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            count:
              type: integer
              format: int64
              example: 18
            sbts:
              type: array
              items:
                $ref: '#/components/schemas/Sbt'

    Collection:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 128
        raw_address:
          type: string
          example: 0:4024219B96E797F4DC2BF384E6ADC2E62283DB7AE9E7BA3068CE24F732D26E68
        friendly_address:
          type: string
          example: EQBAJCGblueX9Nwr84TmrcLmIoPbeunnujBoziT3MtJuaJ0J
        next_item_index:
          type: integer
          format: int64
          example: 151
        content_uri:
          type: string
          example: https://sbt-bot-minter.s3.amazonaws.com/collection.json
        raw_owner_address:
          type: string
          example: 0:C290189A787E15FBA30142A3250B70F3019F8C8553E9A5E1BAF65723AA3C6C47
        friendly_owner_address:
          type: string
          example: UQDCkBiaeH4V-6MBQqMlC3DzAZ-MhVPppeG69lcjqjxsR13R
        name:
          type: string
          example: TON Bounties Contributors
        description:
          type: string
          example: TON Bounties program is an open community initiative that is fast-forwarding support for valuable contributions enhancing The Open Network Ecosystem
        image:
          type: string
          example: https://storage.googleapis.com/tonsociety/596c2c53-deb2-4afd-9318-3d01238ce7c0.png
        content_json:
          type: object
        created_at:
          type: integer
          format: int64
          example: 1711095609
        updated_at:
          type: integer
          format: int64
          example: 1711095609
        version:
          type: integer
          format: int64
          example: 1
    SuccessCollection:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            count:
              type: integer
              format: int64
              example: 324
            users:
              type: array
              items:
                $ref: '#/components/schemas/Collection'
    SuccessCollectionParticipants:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            collection:
              $ref: '#/components/schemas/Collection'
            count:
              type: integer
              format: int64
              example: 69
            participants:
              type: array
              items:
                $ref: '#/components/schemas/PublicUser'
    SuccessLastActivities:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            count:
              type: integer
              format: int64
              example: 68075
            data:
              type: array
              items:
                type: object
                properties:
                  activity:
                    type: object
                    description: Strapi entity
                  award:
                    type: object
                    properties:
                      created_at:
                        type: integer
                        format: int64
                      description:
                        type: string
                      image:
                        type: string
                  user:
                    $ref: '#/components/schemas/PublicUser'

    Hub:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        attributes:
          type: object
          properties:
            title:
              type: string
              example: Global
            url:
              type: string
              example: https://t.me/tonsociety_chat

    SuccessHubs:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: array
          items:
            $ref: '#/components/schemas/Hub'

    SuccessEventCreation:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            activity_id:
              type: integer
              description: Unique id of the newly created activity
              example: 239
            activity_url:
              type: string
              description: Unique society.ton.org url of the newly created activity (the value might change after moderation)
              example: https://society.ton.org/open-league-summer-taipei-bootcamp

    EmptySuccess:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object

    CsbtItem:
      type: object
      properties:
        metadata:
          type: object
          properties:
            owner:
              description: Item's owner
              type: string
              example: 0:000000000000000000000000000000000000000000000000000000000000000
            individual_content:
              description: Item's individual content
              type: string
              example: te6cckEBAQEACAAADDAuanNvbuTiyMU=
            name:
              type: string
              example: TON Bounties Contributors
            description:
              type: string
              example: TON Bounties program is an open community initiative that is fast-forwarding support for valuable contributions enhancing The Open Network Ecosystem
            image:
              type: string
              example: https://storage.googleapis.com/tonsociety/596c2c53-deb2-4afd-9318-3d01238ce7c0.png
        index:
          type: string
          description: Item's index
          example: 0

    CsbtItemByIndex:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/CsbtItem'
        proof_cell:
          type: string
          description: Proof cell that allows one claiming an item on the blockchain
          example: te6cckEBBgEAeQACAAEDAUOAFa1KqA2Oswxbo4Rgh/q6NEaPLuK9o3fo1TFGn+MySjqQAgAMMi5qc29uAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQBQF4S3GMDJY/HoZd6TCREIOnCaYlF23hNzJaSsfMd1S7nBQAA8muEeQ==

    CsbtItems:
      type: object
      properties:
        items:
          type: array
          description: if no items exisits in the slice, null values should be returned instead (see the standrad for details)
          items:
            $ref: '#/components/schemas/CsbtItem'
        last_index:
          type: string
          description: Index of the very last item in the collection. This is a part of the collection state.
          example: 37

    CsbtCollectionState:
      type: object
      properties:
        last_index:
          type: string
          description: Index of the very last item in the collection
          example: 37
        address:
          type: string
          description: The address of the collection smart contract that this API augments
          example: 0:000000000000000000000000000000000000000000000000000000000000000


    CreateRewardLinkBody:
      type: object
      properties:
        wallet_address:
          type: string
          description: The wallet address (in the friendly format), to which a reward is to be issued. Can be left empty if telegram_user_id is provided.
          example: EQDxnrrz-0kgdjehShvisBy2sX7ATVFgoiFKStnD7D8qihVv
        telegram_user_id:
          type: integer
          format: int64
          description: Telegram id associated with an account, to which a reward is to be issued. Can be left empty if wallet_address is provided.
          example: 439739
        attributes:
          deprecated: true
          description: Attributes that will be displayed for SBT on marketplaces and at user wallets
          type: array
          items:
            type: object
            properties:
              trait_type:
                type: string
                example: Organizer
              value:
                type: string
                example: TON Society Asia
        item_metadata:
          $ref: '#/components/schemas/ItemMetadataJson'

    ItemMetadataJson:
      type: object
      properties:
        name:
          description: SBT name
          type: string
          example: TON Meetup for Developers and Founders
        description:
          description: SBT description
          type: string
          example: Reward for participation
        image:
          description: SBT image URL
          type: string
          example: https://storage.googleapis.com/tonsociety/418b25e2-b748-4a64-b8d8-f103ed281049.png
        content_url:
          description: URL for an additional content
          type: string
          example: https://storage.googleapis.com/tonsociety/408f0700-2113-4012-b1ca-8a6aac8ef0fb.mp4
        content_type:
          description: Type of content used for SBT display
          type: string
          example: video/mp4
        buttons:
          description: Buttons to be displayed on SBT
          type: array
          items:
            type: object
            properties:
              uri:
                type: string
                example: https://society.ton.org/welcome
              label:
                type: string
                example: 'View on TON Society'
        organizer:
          description: Organizer category
          type: string
          example: TON Society Asia
        original_activity_url:
          description: Address used to complete the activity
          type: string
          example: https://lu.ma/9ovl6qeq
        start_date_iso:
          description: Activity start date
          type: string
          example: "2024-12-16"
        end_date_iso:
          description: Activity end date
          type: string
          example: "2025-12-31"
        activity_type:
          description: Type of activity
          type: string
          example: Hackathon
        place:
          description: A set of attributes describing the place where activity happens
          type: object
          properties:
            type:
              type: string
              example: Offline
            country_code_iso:
              type: string
              example: HK
            place_coordinates_osm:
              type: string
              example: 22.2793278,114.1628131
            venue_name:
              type: string
              example: Congress Center
        user_data:
          description: Any additional data provided by user when completing an activity
          type: string
          example: John Doe
        attributes:
          description: Attributes that will be displayed for SBT on marketplaces and at user wallets
          type: array
          items:
            type: object
            properties:
              trait_type:
                type: string
                example: Organizer
              value:
                type: string
                example: TON Society Asia

    SuccessRewardLink:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            reward_link:
              type: string
              example: https://society.ton.org/welcome/52528543-df85-4529-afbd-07ac7c48187d

    RewardsExistingCollection:
      type: object
      required: [mint_type, collection_address]
      properties:
        mint_type:
          type: string
          enum:
            - existing_collection
        collection_address:
          type: string
          description: Friendly address of the existing collection
          example: EQBMKz_q9PNYh25t9LneI0lVI5zEab07Fzn_Z8MBtgEd6l7L

    RewardsManualMint:
      type: object
      required: [mint_type, collection]
      properties:
        mint_type:
          type: string
          enum:
            - manual
        collection:
          $ref: '#/components/schemas/CollectionTemplate'

    RewardsHubBased:
      type: object
      description:
        If collection data is not provided, the hub's default collection metadata will be used.
        Otherwise, the fields you provide will overwrite the hub's default collection metadata.
      required: [mint_type]
      properties:
        mint_type:
          type: string
          enum:
            - hub_based
        collection:
          $ref: '#/components/schemas/CollectionTemplate'

    CollectionTemplate:
      type: object
      description: Collection metadata.
      properties:
        title:
          type: string
          description: Title of the collection
          example: 'Open League Summer: Taipei Bootcamp'
        description:
          type: string
          description: Description of the collection
          example: 'Open League Summer is a global hackathon for developers, designers, and enthusiasts to build the future of the Open Network Ecosystem'
        image:
          type: object
          description: Image of the collection
          properties:
            url:
              type: string
              description: URL of the image
              example: https://storage.googleapis.com/tonsociety/596c2c53-deb2-4afd-9318-3d01238ce7c0.png
        cover:
          type: object
          description: Cover image of the collection
          properties:
            url:
              type: string
              description: URL of the cover image
              example: https://storage.googleapis.com/tonsociety/e508ec26-2b3a-456f-b53b-55b9f4de1e4e.png
        metadata:
          type: object
          description: Metadata of the collection
          properties:
            social_links:
              type: array
              description: Social links of the collection
              items:
                type: string
                example: https://t.me/tonsociety
        item_title:
          type: string
          description: Item title of the collection
          example: 'Open League Summer: Taipei Bootcamp'
        item_description:
          type: string
          description: Item description of the collection
          example: Reward for participation
        item_image:
          type: object
          description: Item image of the collection
          properties:
            url:
              type: string
              description: URL of the item image
              example: https://storage.googleapis.com/tonsociety/596c2c53-deb2-4afd-9318-3d01238ce7c0.png
        item_video:
          type: object
          description:
            Item video of the collection. In case of `hub-based` mint type, pass `null` value explicitly if you
            don't want to add video to the collection. Otherwise, the video from hub's collection template will be used.
          properties:
            url:
              type: string
              description: URL of the item video
              example: https://storage.googleapis.com/tonsociety/408f0700-2113-4012-b1ca-8a6aac8ef0fb.mp4
        item_metadata:
          type: object
          description: Item metadata of the collection
          properties:
            buttons:
              type: array
              description: Buttons displayed at marketplaces and user wallets
              items:
                type: object
                properties:
                  uri:
                    type: string
                    description: Uri of the collection item button
                    example: https://lu.ma/3mx6a7l7
                  label:
                    type: string
                    description: Label of the collection item button
                    example: Open in TON Society
            activity_type:
              type: string
              description: Type of the activity
              example: Event
            organizer:
              type: string
              description: Organizer category
              example: Community
            original_activity_url:
              type: string
              description: Address used to complete the activity
              example: https://lu.ma/9ovl6qeq
            start_date_iso:
              type: string
              description: Activity start date in ISO 8601 format
              example: 2024-12-16
            end_date_iso:
              type: string
              description: Activity end date in ISO 8601 format
              example: 2025-12-16
            place:
              type: object
              description: A set of attributes describing the place where activity happens
              properties:
                type:
                  type: string
                  description: Use Online for online events or Offline for offline events
                  example: Online
                country_code_iso:
                  type: string
                  description: If type is Offline, specify two-letter country code from ISO 3166-1
                  example: US
                place_coordinates_osm:
                  type: string
                  description: If type is Offline, specify place coordinates (lat, lon).
                  example: 47.6062095,-122.3320708
                venue_name:
                  type: string
                  description: If type is Offline, specify venue name
                  example: Congress Hall
            user_data:
              type: string
              description: Any additional data provided by user when completing an activity
              example: TON Society Taipei
            attributes:
              type: array
              description: Attributes that will be displayed for SBT on marketplaces and at user wallets
              items:
                type: object
                properties:
                  trait_type:
                    type: string
                    description: Trait type of the collection item attribute
                    example: Strength
                  value:
                    type: string
                    description: Value of the collection item attribute
                    example: 99

    SuccessRewardLinkStatus:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            status:
              type: string
              description: |
                Indicates the status of the reward link.
                Possible values:
                - `NOT_CLAIMED`: The reward has not been claimed by the participant.
                - `CLAIMED`: The reward has been claimed by the participant.
                - `MINTED`: The reward has been minted on the society.ton.org side.
                - `RECEIVED`: The reward has been received by the participant and visible in the society.ton.org profile.
              example: NOT_CLAIMED
              enum:
                - NOT_CLAIMED
                - CLAIMED
                - MINTED
                - RECEIVED

    JoinButtonAttributes:
      type: object
      properties:
        link:
          type: string
        title:
          type: string

    FileAttributes:
      properties:
        url:
          type: string
      type: object

    OptionalFileAttributes:
      properties:
        file:
          $ref: '#/components/schemas/FileAttributes'
        present:
          type: boolean
      type: object

    Place:
      properties:
        country_code_iso:
          type: string
        place_coordinates_osm:
          type: string
        type:
          type: string
        venue_name:
          type: string
      type: object

    AttributeJson:
      properties:
        trait_type:
          type: string
        value:
          type: string
      type: object

    ItemMetadata:
      properties:
        activity_type:
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/AttributeJson'
          type: array
        buttons:
          items:
            $ref: '#/components/schemas/ItemMetadataButton'
          type: array
        content_type:
          type: string
        content_url:
          type: string
        description:
          type: string
        end_date_iso:
          type: string
        image:
          type: string
        name:
          type: string
        organizer:
          type: string
        original_activity_url:
          type: string
        place:
          $ref: '#/components/schemas/Place'
        start_date_iso:
          type: string
        user_data:
          type: string
      type: object

    ItemMetadataButton:
      properties:
        label:
          type: string
        uri:
          type: string
      type: object

    CollectionMetadata:
      properties:
        cover_image:
          type: string
        description:
          type: string
        image:
          type: string
        name:
          type: string
        social_links:
          items:
            type: string
          type: array
      type: object

    CollectionAttributes:
      type: object
      properties:
        cover:
          $ref: '#/components/schemas/FileAttributes'
        description:
          type: string
        image:
          $ref: '#/components/schemas/FileAttributes'
        item_description:
          type: string
        item_image:
          $ref: '#/components/schemas/FileAttributes'
        item_metadata:
          $ref: '#/components/schemas/ItemMetadata'
        item_title:
          type: string
        item_video:
          $ref: '#/components/schemas/OptionalFileAttributes'
        metadata:
          $ref: '#/components/schemas/CollectionMetadata'
        title:
          type: string

    RewardsAttributes:
      type: object
      properties:
        collection:
          $ref: '#/components/schemas/CollectionAttributes'
        collection_address:
          type: string
        hub:
          properties:
            id:
              type: integer
          type: object
        mint_type:
          type: string

    GetActivityResponseDTO:
      type: object
      properties:
        additional_info:
          type: string
        description:
          type: string
        end_date:
          type: string
        join_button:
          $ref: '#/components/schemas/JoinButtonAttributes'
        link:
          type: string
        public_path:
          type: string
        publishedAt:
          type: string
        rewards:
          $ref: '#/components/schemas/RewardsAttributes'
        start_date:
          type: string
        subtitle:
          type: string
        title:
          type: string

    GetActivityCollectionAddressesDTO:
      type: object
      properties:
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail
        data:
          type: object
          properties:
            count:
              type: integer
              format: int64
              example: 103
            activities:
              type: array
              items:
                type: object
                properties:
                  activity_slug:
                    type: string
                    example: hack-ton-berfest-2022
                  raw_collection_address:
                    type: string
                    example: 0:9c547f425fa40acd60fe41bcbaf1a4e69a7ad5499a1c9ed0c0c26e2d1b90c952

    SuccessGetActivityResponseDTO:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetActivityResponseDTO'
        status:
          type: string
          example: success
          enum:
            - success
            - error
            - fail

  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header
    partner_id:
      type: apiKey
      name: x-partner-id
      in: header
